{
  "name": "Cineforyou",
  "tagline": "Documentación del proyecto",
  "body": "# Motivación\r\nHoy día los cines necesitan tener páginas web para mostrarle lo que ofrecen a su público. Para disponer de estas web necesitan invertir gran cantidad de dinero en un diseño y desarrollo personalizados y algunas web pueden resultar algo pobres, quedar obsoletas o dejar cumplir correctamente su función.\r\nEste problema puede suponer poca clientela para el cine y, por lo tanto, una pérdida económica enorme. Y dependiendo de la arquitectura que tenga debajo será más factible o menos modificar el diseño de la web.\r\n\r\n# Descripción\r\nPara solventar este problema se ofrece CineForYou, que es un proyecto que intenta solventar este problema diseñando microservicios que son adaptados a este ámbito. Cada cine podrá usar los microservicios que le convengan y adaptarlos a sus necesidades. Además permite modificar el funcionamiento de una web de una forma sencilla ya sea creando pequeños funcionalidades nuevas o modificando la interfaz que usan estos microservicios.\r\nSe busca una reutilización de las funcionalidades y una completa adaptabilidad del producto final para cada cliente.\r\n\r\n#Objetivo\r\nDiseñar la web de gestión de cines orientada a servicios para su posterior reutilización.\r\n\r\n#Cliente\r\nEste proyecto va dirigido a un cliente imaginario que nos pedirá una aplicación web para la gestión de su cine. El desarrollo de la web se diseñará para solventar su problema de la mejor forma posible y para poder reutilizar cualquier cosa que se diseñe con futuros clientes con un problema similar.\r\n\r\n#Dependencia del proyecto\r\nEste es un proyecto independiente que no depende de ningún otro y que no será incorporado en ningún otro.\r\n\r\n#Arquitectura\r\nSe hará un diseño con una arquitectura de microservicios realizandolo los más diferenciados posibles. Se diseñará una API base que irá llamando a los servicios que el cliente desee incorporar en su web.\r\nEn este caso hemos supuesto que el cliente deseará:\r\n* Iniciar sesión en el sistema a través de diversas aplicaciones como Google o Facebook.\r\n* Mantener un sistema errores en la aplicación.\r\n* Obtener una estadísticas de la información almacenada.\r\n* Obtener patrones de los clientes.\r\n* Gestión de peliculas.\r\n* Gestión de salas.\r\n* Gestión de reservas online\r\n* Gestión de reservas en taquilla.\r\n\r\nEntre otra ventajas al usar los micros servicios se dividirá el proyecto en tareas que podrán ir enseñándole al cliente y podrá integrarse y modificarse cada parte del proyecto.\r\n\r\n#Metodología\r\nPara el desarrollo de la aplicación se utilizará una metodología. Se irán desarrollando distintas versiones del software que se irán testeando, mostrando al cliente y desplegando.\r\nLa primera versión será una funcional de la aplicación que solamente mostrará al usuario lo más básico posible y poco a poco se le irán incorporando servicios para completarlo de funcionalidad.\r\nCon esta metodología se harán un estudio general de las necesidades del cliente y para cada servicio se irán diseñando sus especificaciones conforme se vayan diseñando.\r\n\r\n#Lenguajes\r\nCómo se combinará metodología ágil y un sistemas basado en servicios, usaremos diversos lenguaje según interese para cada servicio o componente. \r\nPara las partes que requieran una gran capacidad de cálculo se usará una base de datos NoSQL cómo podría ser MongoDB y un lenguaje apto para estas operaciones como pyhton o R.\r\nPara otros elementos se usará el lenguaje que se considere más optimo para realizar dicha tarea.\r\n\r\n#Organización de los hitos\r\nComo se indicó anteriormente se irán desarrollando versiones del proyecto, que no todas tienen un orden secuencial y pueden ser entendidas como mejoras:\r\nVersión inicial: Aplicación básica que mostrará la cartelera del cine y la ubicación del mismo.Para ello, deberán de diseñarse la gestión de películas y las salas que podrían ser componentes independientes que trabaje con la aplicación general y se usará el servicio de mapas para ubicar el cine.\r\n* **Gestión de ventas online:** Para esta versión debería de poderse iniciar sesión con los sistemas de Google y Facebook y diseñar un componente para el alquiler de entradas.\r\n* **Gestión de ventas por taquilla:** Para esta versión se necesario controlar los privilegios de los usuarios para distinguir empleados y crear un componente para gestionar la venta de entradas por taquilla.\r\n* **Gestión de la estadística:** Diseñar un componente que obtenga información de los datos almacenados en las bases de datos.\r\n* **Gestión de patrones de usuario:** A partir de la información de los usuarios, que realizan compras online, obtener un patrón de las preferencias de los mismos.\r\n* **Gestión de errores:** Consiste en diseñar un componente que monitorice los errores que vayan ocurriendo en el sistema para poder solucionarlos lo antes posible.\r\n \r\nCómo se indico anteriormente, se utiliza una metodología ágil, por lo tanto, se pueden agregar nuevos componentes según el cliente los vaya requiriendo.\r\n\r\n\r\n#Razones por los que se ha escogido este proyecto\r\nEste proyecto se ha escogido porque tiene muchos elementos que pueden incorporarse como servicios individuales y al hacerlo podemos darle una gran calidad y flexibilidad al producto.\r\n\r\n\r\n#Licencia\r\nEl software está sujeto a la licencia GNU GPL v3.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}